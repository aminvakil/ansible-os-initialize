- name: Set timezone to Asia/Tehran
  timezone:
    name: Asia/Tehran

- name: Check if chronyd is installed
  dnf:
    list: chrony
  register: chrony_installed

- name: Get the rpm package facts
  package_facts:
    manager: "auto"

- name: Install chrony
  dnf:
    name: chrony
  when: ansible_facts.packages.chrony is undefined

- name: Enable chrony service
  systemd:
    name: chronyd
    state: started
    enabled: yes
  when: ansible_facts.packages.chrony is undefined

- name: Check if cloud-init has configured system
  stat:
    path: /etc/cloud/cloud.cfg
  register: cloud_init_configured

- name: change hostname
  hostname:
    name: "{{ hostname }}"
  when: not cloud_init_configured.stat.exists

- name: Install python3-libselinux
  yum:
    name: python3-libselinux
  when: not cloud_init_configured.stat.exists

- name: add hostname to /etc/hosts
  lineinfile:
    dest: /etc/hosts
    regexp: '^127\.0\.0\.1[ \t]+localhost'
    line: '127.0.0.1 localhost {{ hostname }}'
    state: present
  when: not cloud_init_configured.stat.exists

- name: Check SELinux status
  command: getenforce
  register: sestatus
  changed_when: false

- name: Enable SELinux
  selinux:
    policy: targeted
    state: enforcing
  when: '"Disabled" in sestatus.stdout'

- name: Relabel SELinux contexts on reboot
  file:
    dest: /.autorelabel
    state: touch
    mode: 0644
  when: '"Disabled" in sestatus.stdout'

- name: Reboot and wait for server to come up
  reboot:
    reboot_timeout: 600
  when: '"Disabled" in sestatus.stdout'

- name: Install python3-libselinux
  dnf:
    name: python3-libselinux

- name: Removing unneccessary packages
  dnf:
    name: "{{ unnecessary_packages }}"
    state: absent
    autoremove: yes

- name: Update every package
  dnf:
    name: '*'
    state: latest

- name: Check if kernel has been updated
  command: if [ $(rpm -q kernel|tail -n 1) != kernel-$(uname -r) ]; then echo 'reboot'; else echo 'no'; fi
  register: kernel_update
  changed_when: false

- name: Reboot to match new kernel
  reboot:
    reboot_timeout: 600
  when: kernel_update.stdout.find("reboot") != -1

- name: Autoremove unneeded packages installed as dependencies
  dnf:
    autoremove: yes

- name: Stop and disable unnecessary services
  systemd:
    name: "{{ item }}"
    state: stopped
    enabled: no
  with_items: "{{ unnecessary_services }} | default([])"

- name: Install python3-libselinux
  dnf:
    name: python3-libselinux

- name: Set vm.swappiness to 10 percent
  sysctl:
    name: vm.swappiness
    value: "10"
    state: present

- name: Increase local port range
  sysctl:
    name: net.ipv4.ip_local_port_range
    value: "1025 65535"
    state: present
